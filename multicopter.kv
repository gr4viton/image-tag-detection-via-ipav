#:kivy 1.9


<Multicopter>:
#    cols: 1
    gl_left: gl_left
#    gl_middle: gl_middle
#    gl_right: gl_right
    img_webcam: img_webcam
    img_tags: img_tags
    txt_numFound: txt_numFound
#    sla_tags: sla_tags
    layout_steps: layout_steps
#    img_steps: img_steps # temporal


    GridLayout:
#        size_hint_x: 1
        cols:1
        id: gl_left
#        padding: 10
#        canvas.before:
#            Color:
#                rgba: 0, 1, 0, 1
#            Rectangle:
#                # self here refers to the widget i.e FloatLayout
#                pos: self.pos
#                size: self.size

        Button:
            text: "Hide all"
            size_hint_y: 0.1
            on_press: root.step_widgets_control.show('none')
        Button:
            text: "Show all"
            size_hint_y: 0.1
            on_press: root.step_widgets_control.show('all')
        Button:
#            text: 'Switch cameras'
            text: 'Toggle findtag algorythm'
            size_hint_y: .05
            on_press: root.findtag_control.toggle_findtagging()
            # pos_hint: {'center_x':.5, 'center_y': .5}
        Button:
            text: 'Toggle capturing'
            size_hint_y: .05
            on_press: root.capture_control.toggle_capturing();
        Button:
            text: 'Switch cameras'
            size_hint_y: .05
            on_press: root.capture_control.toggle_source_id();
            # pos_hint: {'center_x':.5, 'center_y': .5}
        GridLayout:
            cols: 1
            size_hint_y: 0.1
        Image:
            id: img_webcam
        Label:
            text: "Number of found tags in image"
            size_hint_y: 0.1
        Label:
            id: txt_numFound
#            text: root.str_num_found
            size_hint_y: 0.1
        Label:
            text: "findtag mean time [ms]"
            size_hint_y: 0.1
        Label:
#            text: root.findtag_control.mean_exec_time
    Splitter:
#        id: spl

        width: 1099
        max_size: self.parent.width - 200
#        self.width
#        Label:
#            text:
#                'splitter.width: {}\nparent.width: {}\nmax_size: {}'\
#                .format(spl.width, root.width, spl.max_size)
        GridLayout:
            cols: 1
#            size_hint_x: 1
            orientation: 'vertical'
#            id: gl_middle
#            id: sla_steps
            padding: 10
#            ScrollView:
#                size: root.size
    #            do_scroll: 1
#            ScrollView:
#                viewport_size: root.size
#                do_scroll_x: False
            StackLayout:
                orientation: 'lr-tb'
#                orientation: 'tb-lr'
                size_hint_x: 1
                id: layout_steps
            Image:
                id: img_tags
    #        Button:
    #            text: 'Save the matrix??'

#        Splitter:
#            vertical: 0
#            GridLayout:
#                size_hint_x: 0.5
#                cols:1
#                id: gl_right
#                padding: 10
#                Button:
#                    text: 'Save the matrix??'
        #
        #        Button:
        #            text: 'Exit'
        #            on_press: Exit()

<StepWidget>:
    toggle_object: toggle
    kivy_image: kivy_image
    size_hint_y: 0.6
    size_hint_x: 0.33
    cols: 1
    ToggleButton:
        id: toggle
        text: root.name
        size_hint_y: 0.2
#        state: root.drawing
        state: 'down'
#        on_press: root.drawing = (self.state == 'down')
#        on_state: root.drawing = (self.state == 'down')
        on_state: root.set_drawing(self.state == 'down')

    Image:
        id: kivy_image
        size_hint_y: 0.8
#        size_hint_x: 1
        background_normal: 'True'
    #    on_touch_down: root.drawing = (toggle.state == 'down')
    #    on_press: print('jasd')
        #self.toggle_drawing()
    #    root.drawing = (toggle_object.state == 'down')

#    GridLayout
#        cols: 1